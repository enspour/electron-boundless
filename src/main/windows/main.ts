import { ipcMain, BrowserWindow } from "electron";

// This allows TypeScript to pick up the magic constants that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;
declare const MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY: string;

const createMainWindow = (): void => {
    // Create the browser window.
    const window = new BrowserWindow({
        height: 600,
        width: 1000,
        frame: false,
        transparent: true,
        webPreferences: {
            nodeIntegration: true,
            contextIsolation: true,
            preload: MAIN_WINDOW_PRELOAD_WEBPACK_ENTRY,
        },
    });

    // and load the index.html of the app.
    window.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

    // Open the DevTools.
    window.webContents.openDevTools();

    // events
    window.on("resize", () => {
        const [width, height] = window.getSize();
        window.webContents.send("resize", { width, height });
    });

    window.on("maximize", () => {
        window.webContents.send("maximize");
    });

    window.on("unmaximize", () => {
        window.webContents.send("un-maximize");
    });

    // handles
    ipcMain.handle("app-quit", () => {
        window.close();
    });

    ipcMain.handle("app-maximize", () => {
        window.maximize();
    });

    ipcMain.handle("app-un-maximize", () => {
        window.unmaximize();
    });

    ipcMain.handle("app-minimize", () => {
        window.minimize();
    });
};

export default createMainWindow;
